AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  IG-Trading-1
  Sample SAM Template for IG-Trading-1
Resources:
  IgTradingStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionSubstitutions:
        IgLoginFunctionArn: !GetAtt IgLoginFunction.Arn
        IgRunStrategyFunctionArn: !GetAtt IgRunStrategyFunction.Arn
        IgProcessBuySellFunction: !GetAtt IgProcessBuySellFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref TransactionTable
        DDBTableEquity: !Ref EquityTable
      Events:
        # HourlyTradingSchedule:
        #   Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
        #   Properties:
        #     Description: Schedule to run the stock trading state machine every hour
        #     Enabled: false # This schedule is disabled by default to avoid incurring charges.
        #     Schedule: rate(1 hour)
        CronHourlyTradingSchedule:
          Type: ScheduleV2
          Properties:
            Description: Schedule to run the stock trading state machine every hour
            # Enabled: false # This schedule is disabled by default to avoid incurring charges.
            ScheduleExpression: cron(0 * * * ? *)
      Policies:
        # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref IgLoginFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref IgRunStrategyFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref IgProcessBuySellFunction
        - DynamoDBWritePolicy:
            TableName: !Ref TransactionTable
        - DynamoDBWritePolicy:
            TableName: !Ref EquityTable
        - S3FullAccessPolicy:
            BucketName: aws-sam-cli-managed-default-samclisourcebucket-3pncdm36uy1a # bucket name without arn
        - StepFunctionsExecutionPolicy:
            StateMachineName: IgTradingStateMachine-bZFO8X8ao3Cu
      DefinitionUri: statemachine/ig_trader.asl.json

  IgLoginFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/ig_login/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 30
      Policies:
        - S3FullAccessPolicy:
            BucketName: aws-sam-cli-managed-default-samclisourcebucket-3pncdm36uy1a # bucket name without arn
      Environment:
        Variables:
          DEMO_API_URL: https://demo-api.ig.com/gateway/deal
          DEMO_API_KEY: <your-credentials-here>
          DEMO_USERNAME: <your-credentials-here>
          DEMO_PASSWORD: <your-credentials-here>

  IgRunStrategyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/ig_run_strategy/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 180
      MemorySize: 512
      Policies:
        - S3FullAccessPolicy:
            BucketName: aws-sam-cli-managed-default-samclisourcebucket-3pncdm36uy1a # bucket name without arn
      Environment:
        Variables:
          DEMO_API_URL: https://demo-api.ig.com/gateway/deal
          DEMO_API_KEY: <your-credentials-here>
          DEMO_USERNAME: <your-credentials-here>
          DEMO_PASSWORD: <your-credentials-here>

  IgProcessBuySellFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/ig_process_buy_sell/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 180
      MemorySize: 512
      Policies:
        - S3FullAccessPolicy:
            BucketName: aws-sam-cli-managed-default-samclisourcebucket-3pncdm36uy1a # bucket name without arn
        - DynamoDBWritePolicy:
            TableName: !Ref TransactionTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TransactionTable
        - DynamoDBWritePolicy:
            TableName: !Ref EquityTable
        - DynamoDBCrudPolicy:
            TableName: !Ref EquityTable
      Environment:
        Variables:
          DEMO_API_URL: https://demo-api.ig.com/gateway/deal
          DEMO_API_KEY: <your-credentials-here>
          DEMO_USERNAME: <your-credentials-here>
          DEMO_PASSWORD: <your-credentials-here>

  TransactionTable:
    Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  EquityTable:
    Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
    Properties:
      PrimaryKey:
        Name: TimeStamp
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # IgTradingStateMachineHourlyTradingSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  IgTradingStateMachineArn:
    Description: IG Trading State machine ARN
    Value: !Ref IgTradingStateMachine
  IgTradingStateMachineRoleArn:
    Description: IAM Role created for IG Trading State machine based on the
      specified SAM Policy Templates
    Value: !GetAtt IgTradingStateMachineRole.Arn
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
